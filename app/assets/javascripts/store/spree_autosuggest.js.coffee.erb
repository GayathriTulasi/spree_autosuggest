//= require store/spree_core

class Autosuggest
  constructor: (selector, options = {}) ->
    @search_field = $(selector)
    return if @search_field.length == 0

    @max_from_db = options.max_from_db
    @max_to_display = options.max_to_display
    @cache = {}

    $.extend true, $.ui.autocomplete::, @extension_methods()

    @search_field.autocomplete(
      minLength: 1,
      delay: 1,
      source: (request, response) =>
        response @finder(request))
      .bind "keydown.autocomplete", (event) =>
        @fire_keybinds(event)

  fire_keybinds: (event) ->
    if event.keyCode == $.ui.keyCode.RIGHT
      elem = $(@search_field.data('autocomplete').menu.active).find('a')
      if elem.length > 0
        elem.trigger('click')
      else
        $('li.ui-menu-item:first a').trigger('mouseenter').trigger('click')

  finder: (request) ->
    term = request.term.toLowerCase()
    cached = @from_cache(term)
    return cached if cached
    $.ajax
      type: 'GET'
      url: "/suggestions"
      dataType: 'JSON'
      data: request
      async: false
      context: this
      success: (data) ->
        @cache[term] = data
    @from_cache(term)

  from_cache: (term) ->
    result = false
    $.each @cache, (key, data) =>
      if term.indexOf(key) is 0 and data.length < @max_from_db
        result = @filter_terms(data, term).slice(0, @max_to_display)
    result

  filter_terms: (array, term) ->
      matcher = new RegExp($.ui.autocomplete.escapeRegex(term), "i")
      $.grep array, (value) =>
        source = value.label or value.value or value
        matcher.test(source) || switched = matcher.test(@keyswitch(source))

  extension_methods: ->
    _renderItem: (ul, item) ->
        item.label = item.label.replace(new RegExp("^(" + $.ui.autocomplete.escapeRegex(@term) + ")", "gi"), "<strong>$1</strong>")
        $("<li></li>").data("item.autocomplete", item).append("<a>" + item.label + "</a>").appendTo ul

  keyswitch: (str) ->
    ru = "йцукенгшщзхъфывапролджэячсмитьбюёЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮЁ"
    en = "qwertyuiop[]asdfghjkl;'zxcvbnm,.`QWERTYUIOP{}ASDFGHJKL:\"ZXCVBNM<>~"

    if ru.indexOf(str.match("[^Wd_]")) is -1
      from = en
      to = ru
    else
      from = ru
      to = en

    switched = ""
    for char in str
      fromIndex = from.indexOf(char)
      if fromIndex < 0
        switched += char
      else
        switched += to[fromIndex]

    switched


$ ->
  suggestOn = '<%= Spree::Autosuggest::Config.field %>'
  $("input[name=#{suggestOn}]:not(.ui-autocomplete-input)").live "focus", ->
    new Autosuggest($(this),
      max_from_db: <%= Spree::Autosuggest::Config.rows_from_db %>
      max_to_display: <%= Spree::Autosuggest::Config.rows_to_display %>
    )
